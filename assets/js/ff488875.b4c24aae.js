"use strict";(self.webpackChunkmiddy=self.webpackChunkmiddy||[]).push([[5711],{1033:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>c,default:()=>m,frontMatter:()=>d,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"middlewares/ssm","title":"ssm","description":"This middleware fetches parameters from AWS Systems Manager Parameter Store.","source":"@site/docs/middlewares/ssm.md","sourceDirName":"middlewares","slug":"/middlewares/ssm","permalink":"/docs/middlewares/ssm","draft":false,"unlisted":false,"editUrl":"https://github.com/middyjs/middy/tree/main/website/docs/middlewares/ssm.md","tags":[],"version":"current","lastUpdatedAt":1750110598000,"frontMatter":{"title":"ssm"},"sidebar":"tutorialSidebar","previous":{"title":"sqs-partial-batch-failure","permalink":"/docs/middlewares/sqs-partial-batch-failure"},"next":{"title":"sts","permalink":"/docs/middlewares/sts"}}');var s=n(4848),r=n(8453),l=n(1470),i=n(9365);const d={title:"ssm"},c=void 0,o={},u=[{value:"Install",id:"install",level:2},{value:"Options",id:"options",level:2},{value:"Sample usage",id:"sample-usage",level:2},{value:"Bundling",id:"bundling",level:2},{value:"Usage with TypeScript",id:"usage-with-typescript",level:2}];function h(e){const a={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a.p,{children:["This middleware fetches parameters from ",(0,s.jsx)(a.a,{href:"https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-paramstore.html",children:"AWS Systems Manager Parameter Store"}),"."]}),"\n",(0,s.jsxs)(a.p,{children:["Parameters to fetch can be defined by path and by name (not mutually exclusive). See AWS docs ",(0,s.jsx)(a.a,{href:"https://aws.amazon.com/blogs/mt/organize-parameters-by-hierarchy-tags-or-amazon-cloudwatch-events-with-amazon-ec2-systems-manager-parameter-store/",children:"here"}),"."]}),"\n",(0,s.jsxs)(a.p,{children:["Parameters can be assigned to the function handler's ",(0,s.jsx)(a.code,{children:"context"})," object by setting the ",(0,s.jsx)(a.code,{children:"setToContext"})," flag to ",(0,s.jsx)(a.code,{children:"true"}),". By default all parameters are added with uppercase names."]}),"\n",(0,s.jsx)(a.p,{children:"The Middleware makes a single API request to fetch all the parameters defined by name, but must make an additional request per specified path. This is because the AWS SDK currently doesn't expose a method to retrieve parameters from multiple paths."}),"\n",(0,s.jsxs)(a.p,{children:["For each parameter defined by name, you also provide the name under which its value should be added to ",(0,s.jsx)(a.code,{children:"context"}),". For each path, you instead provide a prefix, and by default the value import each parameter returned from that path will be added to ",(0,s.jsx)(a.code,{children:"context"})," with a name equal to what's left of the parameter's full name ",(0,s.jsx)(a.em,{children:"after"})," the defined path, with the prefix prepended. If the prefix is an empty string, nothing is prepended. You can override this behaviour by providing your own mapping function with the ",(0,s.jsx)(a.code,{children:"getParamNameFromPath"})," config option."]}),"\n",(0,s.jsx)(a.h2,{id:"install",children:"Install"}),"\n",(0,s.jsx)(a.p,{children:"To install this middleware you can use NPM:"}),"\n",(0,s.jsxs)(l.A,{groupId:"npm2yarn",children:[(0,s.jsx)(i.A,{value:"npm",children:(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"npm install --save @middy/ssm\nnpm install --save-dev @aws-sdk/client-ssm\n"})})}),(0,s.jsx)(i.A,{value:"yarn",label:"Yarn",children:(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"yarn add @middy/ssm\nyarn add --dev @aws-sdk/client-ssm\n"})})}),(0,s.jsx)(i.A,{value:"pnpm",label:"pnpm",children:(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"pnpm add @middy/ssm\npnpm add --save-dev @aws-sdk/client-ssm\n"})})}),(0,s.jsx)(i.A,{value:"bun",label:"Bun",children:(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"bun add @middy/ssm\nbun add --dev @aws-sdk/client-ssm\n"})})})]}),"\n",(0,s.jsx)(a.h2,{id:"options",children:"Options"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"AwsClient"})," (object) (default ",(0,s.jsx)(a.code,{children:"SSMClient"}),"): SSMClient class constructor (i.e. that has been instrumented with AWS X-Ray). Must be from ",(0,s.jsx)(a.code,{children:"@aws-sdk/client-ssm"}),"."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"awsClientOptions"})," (object) (optional): Options to pass to SSMClient class constructor."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"awsClientAssumeRole"})," (string) (optional): Internal key where role tokens are stored. See ",(0,s.jsx)(a.a,{href:"/docs/middlewares/sts",children:"@middy/sts"})," on to set this."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"awsClientCapture"})," (function) (optional): Enable AWS X-Ray by passing ",(0,s.jsx)(a.code,{children:"captureAWSv3Client"})," from ",(0,s.jsx)(a.code,{children:"aws-xray-sdk"})," in."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"fetchData"})," (object) (required): Mapping of internal key name to API request parameter ",(0,s.jsx)(a.code,{children:"Names"}),"/",(0,s.jsx)(a.code,{children:"Path"}),". ",(0,s.jsx)(a.code,{children:"SecureString"})," are automatically decrypted."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"disablePrefetch"})," (boolean) (default ",(0,s.jsx)(a.code,{children:"false"}),"): On cold start requests will trigger early if they can. Setting ",(0,s.jsx)(a.code,{children:"awsClientAssumeRole"})," disables prefetch."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"cacheKey"})," (string) (default ",(0,s.jsx)(a.code,{children:"ssm"}),"): Cache key for the fetched data responses. Must be unique across all middleware."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"cacheExpiry"})," (number) (default ",(0,s.jsx)(a.code,{children:"-1"}),"): How long fetch data responses should be cached for. ",(0,s.jsx)(a.code,{children:"-1"}),": cache forever, ",(0,s.jsx)(a.code,{children:"0"}),": never cache, ",(0,s.jsx)(a.code,{children:"n"}),": cache for n ms."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"setToContext"})," (boolean) (default ",(0,s.jsx)(a.code,{children:"false"}),"): Store role tokens to ",(0,s.jsx)(a.code,{children:"request.context"}),"."]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"NOTES:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["Lambda is required to have IAM permission for ",(0,s.jsx)(a.code,{children:"ssm:GetParameters"})," and/or ",(0,s.jsx)(a.code,{children:"ssm:GetParametersByPath"})," depending on what you're requesting, along with ",(0,s.jsx)(a.code,{children:"kms:Decrypt"}),"."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"SSM"})," has ",(0,s.jsx)(a.a,{href:"https://docs.aws.amazon.com/general/latest/gr/ssm.html",children:"throughput limitations"}),". Switching to Advanced Parameter type or increasing ",(0,s.jsx)(a.code,{children:"maxRetries"})," and ",(0,s.jsx)(a.code,{children:"retryDelayOptions.base"})," in ",(0,s.jsx)(a.code,{children:"awsClientOptions"})," may be required."]}),"\n"]}),"\n",(0,s.jsx)(a.h2,{id:"sample-usage",children:"Sample usage"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-javascript",children:"import middy from '@middy/core'\nimport ssm from '@middy/ssm'\n\nconst lambdaHandler = (event, context) => {\n  return {}\n}\n\nlet globalDefaults = {}\nexport const handler = middy()\n  .use(\n    ssm({\n      fetchData: {\n        accessToken: '/dev/service_name/access_token', // single value\n        dbParams: '/dev/service_name/database/', // object of values, key for each path\n        defaults: '/dev/defaults'\n      },\n      setToContext: true\n    })\n  )\n  .before((request) => {\n    globalDefaults = request.context.defaults.global\n  })\n  .handler(lambdaHandler)\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-javascript",children:"import middy from '@middy/core'\nimport { getInternal } from '@middy/util'\nimport ssm from '@middy/ssm'\n\nconst lambdaHandler = (event, context) => {\n  return {}\n}\n\nlet globalDefaults = {}\nexport const handler = middy()\n  .use(\n    ssm({\n      fetchData: {\n        defaults: '/dev/defaults'\n      },\n      cacheKey: 'ssm-defaults'\n    })\n  )\n  .use(\n    ssm({\n      fetchData: {\n        accessToken: '/dev/service_name/access_token', // single value\n        dbParams: '/dev/service_name/database/' // object of values, key for each path\n      },\n      cacheExpiry: 15 * 60 * 1000,\n      cacheKey: 'ssm-secrets'\n    })\n  )\n  // ... other middleware that fetch\n  .before(async (request) => {\n    const data = await getInternal(\n      ['accessToken', 'dbParams', 'defaults'],\n      request\n    )\n    Object.assign(request.context, data)\n  })\n  .handler(lambdaHandler)\n"})}),"\n",(0,s.jsx)(a.h2,{id:"bundling",children:"Bundling"}),"\n",(0,s.jsxs)(a.p,{children:["To exclude ",(0,s.jsx)(a.code,{children:"@aws-sdk"})," add ",(0,s.jsx)(a.code,{children:"@aws-sdk/client-ssm"})," to the exclude list."]}),"\n",(0,s.jsx)(a.h2,{id:"usage-with-typescript",children:"Usage with TypeScript"}),"\n",(0,s.jsxs)(a.p,{children:["Data in SSM can be stored as arbitrary JSON values. It's not possible to know in advance what shape the fetched SSM parameters will have, so by default the fetched parameters will have type ",(0,s.jsx)(a.code,{children:"unknown"}),"."]}),"\n",(0,s.jsxs)(a.p,{children:["You can provide some type hints by leveraging the ",(0,s.jsx)(a.code,{children:"ssmParam"})," utility function. This function allows you to specify what's the expected type that will be fetched for every parameter."]}),"\n",(0,s.jsxs)(a.p,{children:["The idea is that, for every parameter specified in the ",(0,s.jsx)(a.code,{children:"fetchData"})," option, rather than just providing the parameter path as a string, you can wrap it in a ",(0,s.jsx)(a.code,{children:"ssmParam<ParamType>(parameterPath)"})," call. Internally, ",(0,s.jsx)(a.code,{children:"ssmParam"})," is a function that will return ",(0,s.jsx)(a.code,{children:"parameterPath"})," as received, but it allows you to use generics to provide type hints for the expected type for that parameter."]}),"\n",(0,s.jsx)(a.p,{children:"This way TypeScript can understand how to treat the additional data attached to the context and stored in the internal storage."}),"\n",(0,s.jsxs)(a.p,{children:["The following example illustrates how to use ",(0,s.jsx)(a.code,{children:"ssmParam"}),":"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-typescript",children:"import middy from '@middy/core'\nimport { getInternal } from '@middy/util'\nimport ssm, { ssmParam } from '@middy/ssm'\n\nconst lambdaHandler = (event, context) => {\n  return {}\n}\n\nlet globalDefaults = {}\nexport const handler = middy()\n  .use(\n    ssm({\n      fetchData: {\n        accessToken: ssmParam<string>('/dev/service_name/access_token'), // single value (will be typed as string)\n        dbParams: ssmParam<{ user: string; pass: string }>(\n          '/dev/service_name/database/'\n        ) // object of values (typed as {user: string, pass: string})\n      },\n      cacheExpiry: 15 * 60 * 1000,\n      cacheKey: 'ssm-secrets'\n    })\n  )\n  // ... other middleware that fetch\n  .before(async (request) => {\n    const data = await getInternal(['accessToken', 'dbParams'], request)\n    // data.accessToken (string)\n    // data.dbParams ({user: string, pass: string})\n  })\n  .handler(lambdaHandler)\n"})})]})}function m(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1470:(e,a,n)=>{n.d(a,{A:()=>w});var t=n(6540),s=n(4164),r=n(3104),l=n(6347),i=n(205),d=n(7485),c=n(1682),o=n(679);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:a,children:n}=e;return(0,t.useMemo)((()=>{const e=a??function(e){return u(e).map((({props:{value:e,label:a,attributes:n,default:t}})=>({value:e,label:a,attributes:n,default:t})))}(n);return function(e){const a=(0,c.XI)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,n])}function m({value:e,tabValues:a}){return a.some((a=>a.value===e))}function p({queryString:e=!1,groupId:a}){const n=(0,l.W6)(),s=function({queryString:e=!1,groupId:a}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,d.aZ)(s),(0,t.useCallback)((e=>{if(!s)return;const a=new URLSearchParams(n.location.search);a.set(s,e),n.replace({...n.location,search:a.toString()})}),[s,n])]}function f(e){const{defaultValue:a,queryString:n=!1,groupId:s}=e,r=h(e),[l,d]=(0,t.useState)((()=>function({defaultValue:e,tabValues:a}){if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:r}))),[c,u]=p({queryString:n,groupId:s}),[f,x]=function({groupId:e}){const a=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,s]=(0,o.Dv)(a);return[n,(0,t.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:s}),b=(()=>{const e=c??f;return m({value:e,tabValues:r})?e:null})();(0,i.A)((()=>{b&&d(b)}),[b]);return{selectedValue:l,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);d(e),u(e),x(e)}),[u,x,r]),tabValues:r}}var x=n(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=n(4848);function j({className:e,block:a,selectedValue:n,selectValue:t,tabValues:l}){const i=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.a_)(),c=e=>{const a=e.currentTarget,s=i.indexOf(a),r=l[s].value;r!==n&&(d(a),t(r))},o=e=>{let a=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;a=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;a=i[n]??i[i.length-1];break}}a?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":a},e),children:l.map((({value:e,label:a,attributes:t})=>(0,y.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{i.push(e)},onKeyDown:o,onClick:c,...t,className:(0,s.A)("tabs__item",b.tabItem,t?.className,{"tabs__item--active":n===e}),children:a??e},e)))})}function g({lazy:e,children:a,selectedValue:n}){const r=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){const e=r.find((e=>e.props.value===n));return e?(0,t.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:r.map(((e,a)=>(0,t.cloneElement)(e,{key:a,hidden:e.props.value!==n})))})}function v(e){const a=f(e);return(0,y.jsxs)("div",{className:(0,s.A)("tabs-container",b.tabList),children:[(0,y.jsx)(j,{...a,...e}),(0,y.jsx)(g,{...a,...e})]})}function w(e){const a=(0,x.A)();return(0,y.jsx)(v,{...e,children:u(e.children)},String(a))}},8453:(e,a,n)=>{n.d(a,{R:()=>l,x:()=>i});var t=n(6540);const s={},r=t.createContext(s);function l(e){const a=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:a},e.children)}},9365:(e,a,n)=>{n.d(a,{A:()=>l});n(6540);var t=n(4164);const s={tabItem:"tabItem_Ymn6"};var r=n(4848);function l({children:e,hidden:a,className:n}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,n),hidden:a,children:e})}}}]);