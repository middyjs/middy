"use strict";(self.webpackChunkmiddy=self.webpackChunkmiddy||[]).push([[907],{7185:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"middlewares/ws-json-body-parser","title":"ws-json-body-parser","description":"This middleware automatically parses WebSocket requests with a JSON body and converts the body into an","source":"@site/docs/middlewares/ws-json-body-parser.md","sourceDirName":"middlewares","slug":"/middlewares/ws-json-body-parser","permalink":"/docs/middlewares/ws-json-body-parser","draft":false,"unlisted":false,"editUrl":"https://github.com/middyjs/middy/tree/main/website/docs/middlewares/ws-json-body-parser.md","tags":[],"version":"current","lastUpdatedAt":1750110598000,"frontMatter":{"title":"ws-json-body-parser"},"sidebar":"tutorialSidebar","previous":{"title":"warmup","permalink":"/docs/middlewares/warmup"},"next":{"title":"ws-response","permalink":"/docs/middlewares/ws-response"}}');var a=n(4848),t=n(8453);const d={title:"ws-json-body-parser"},o=void 0,i={},l=[{value:"Install",id:"install",level:2},{value:"Options",id:"options",level:2},{value:"Sample usage",id:"sample-usage",level:2}];function c(e){const s={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.p,{children:"This middleware automatically parses WebSocket requests with a JSON body and converts the body into an\nobject."}),"\n",(0,a.jsx)(s.p,{children:"It can also be used in combination with validator as a prior step to normalize the\nevent body input as an object so that the content can be validated."}),"\n",(0,a.jsxs)(s.p,{children:["If the body has been parsed as JSON, you can access the original body through the ",(0,a.jsx)(s.code,{children:"request.event.rawBody"}),"."]}),"\n",(0,a.jsx)(s.h2,{id:"install",children:"Install"}),"\n",(0,a.jsx)(s.p,{children:"To install this middleware you can use NPM:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"npm install --save @middy/ws-json-body-parser\n"})}),"\n",(0,a.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"reviver"})," (function) (default ",(0,a.jsx)(s.code,{children:"undefined"}),"): A ",(0,a.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Parameters",children:"reviver"})," parameter may be passed which will be used ",(0,a.jsx)(s.code,{children:"JSON.parse"}),"ing the body."]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"sample-usage",children:"Sample usage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-javascript",children:"import middy from '@middy/core'\nimport wsJsonBodyParserMiddleware from '@middy/ws-json-body-parser'\nimport wsResponseMiddleware from '@middy/ws-response'\n\nconst lambdaHandler = (event) => {\n  return event.body.message\n}\n\nexport const handler = middy()\n  .use(wsJsonBodyParserMiddleware())\n  .use(wsResponseMiddleware())\n  .handler(lambdaHandler)\n"})})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>o});var r=n(6540);const a={},t=r.createContext(a);function d(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);