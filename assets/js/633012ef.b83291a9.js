"use strict";(self.webpackChunkmiddy=self.webpackChunkmiddy||[]).push([[7331],{3399:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"routers/cloudformation-router","title":"cloudformation-router","description":"This handler can route to requests to one of a nested handler based on requestType of a CloudFormation Custom Response event.","source":"@site/docs/routers/cloudformation-router.md","sourceDirName":"routers","slug":"/routers/cloudformation-router","permalink":"/docs/routers/cloudformation-router","draft":false,"unlisted":false,"editUrl":"https://github.com/middyjs/middy/tree/main/website/docs/routers/cloudformation-router.md","tags":[],"version":"current","lastUpdatedAt":1750110598000,"frontMatter":{"title":"cloudformation-router"},"sidebar":"tutorialSidebar","previous":{"title":"Routers","permalink":"/docs/category/routers"},"next":{"title":"http-router","permalink":"/docs/routers/http-router"}}');var o=r(4848),d=r(8453);const s={title:"cloudformation-router"},a=void 0,l={},i=[{value:"Install",id:"install",level:2},{value:"Options",id:"options",level:2},{value:"Sample usage",id:"sample-usage",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["This handler can route to requests to one of a nested handler based on ",(0,o.jsx)(n.code,{children:"requestType"})," of a CloudFormation Custom Response event."]}),"\n",(0,o.jsx)(n.h2,{id:"install",children:"Install"}),"\n",(0,o.jsx)(n.p,{children:"To install this middleware you can use NPM:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install --save @middy/cloudformation-router\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"routes"})," (array[{routeKey, handler}]) (required): Array of route objects.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"routeKey"})," (string) (required): AWS formatted request type. ie ",(0,o.jsx)(n.code,{children:"Create"}),", ",(0,o.jsx)(n.code,{children:"Update"}),", ",(0,o.jsx)(n.code,{children:"Delete"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"handler"})," (function) (required): Any ",(0,o.jsx)(n.code,{children:"handler(event, context, {signal})"})," function"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"notFoundHandler"})," (function): Override default FAILED response with your own custom response. Passes in ",(0,o.jsx)(n.code,{children:"{requestType}"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"NOTES:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Reponse parameters are automatically applied for ",(0,o.jsx)(n.code,{children:"Status"}),", ",(0,o.jsx)(n.code,{children:"RequestId"}),", ",(0,o.jsx)(n.code,{children:"LogicalResourceId"}),", and/or ",(0,o.jsx)(n.code,{children:"StackId"})," when not present."]}),"\n",(0,o.jsxs)(n.li,{children:["Errors should be handled as part of the router middleware stack ",(0,o.jsx)(n.strong,{children:"or"})," the lambdaHandler middleware stack. Handled errors in the later will trigger the ",(0,o.jsx)(n.code,{children:"after"})," middleware stack of the former."]}),"\n",(0,o.jsx)(n.li,{children:"Shared middlewares, connected to the router middleware stack, can only be run before the lambdaHandler middleware stack."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"sample-usage",children:"Sample usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"import middy from '@middy/core'\nimport cloudformationRouterHandler from '@middy/cloudformation-router'\nimport cloudformationResponseMiddleware from '@middy/cloudformation-response'\nimport validatorMiddleware from '@middy/validator'\n\nconst createHandler = middy()\n  .use(validatorMiddleware({eventSchema: {...} }))\n  .handler((event, context) => {\n    return {\n      PhysicalResourceId: '...',\n      Data:{}\n    }\n  })\n\nconst updateHandler = middy()\n  .use(validatorMiddleware({eventSchema: {...} }))\n  .handler((event, context) => {\n    return {\n      PhysicalResourceId: '...',\n      Data: {}\n    }\n  })\n\nconst deleteHandler = middy()\n  .use(validatorMiddleware({eventSchema: {...} }))\n  .handler((event, context) => {\n    return {\n      PhysicalResourceId: '...'\n    }\n  })\n\nconst routes = [\n  {\n    requesType: 'Create',\n    handler: createHandler\n  },\n  {\n    requesType: 'Update',\n    handler: updateHandler\n  },\n  {\n    routeKey: 'Delete',\n    handler: deleteHandler\n  }\n]\n\nexport const handler = middy()\n  .use(cloudformationResponseMiddleware())\n  .handler(cloudformationRouterHandler(routes))\n"})})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var t=r(6540);const o={},d=t.createContext(o);function s(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);