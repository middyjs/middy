"use strict";(self.webpackChunkmiddy=self.webpackChunkmiddy||[]).push([[6869],{2803:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"events/cloud-formation","title":"CloudFormation","description":"This page is a work in progress. If you want to help us to make this page better, please consider contributing on GitHub.","source":"@site/docs/events/cloud-formation.md","sourceDirName":"events","slug":"/events/cloud-formation","permalink":"/docs/events/cloud-formation","draft":false,"unlisted":false,"editUrl":"https://github.com/middyjs/middy/tree/main/website/docs/events/cloud-formation.md","tags":[],"version":"current","lastUpdatedAt":1750110598000,"frontMatter":{"title":"CloudFormation"},"sidebar":"tutorialSidebar","previous":{"title":"AppSync","permalink":"/docs/events/appsync"},"next":{"title":"CloudFront Lambda@Edge","permalink":"/docs/events/cloud-front"}}');var r=t(4848),a=t(8453);const d={title:"CloudFormation"},i=void 0,s={},l=[{value:"AWS Documentation",id:"aws-documentation",level:2},{value:"Example",id:"example",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsx)(n.p,{children:"This page is a work in progress. If you want to help us to make this page better, please consider contributing on GitHub."})}),"\n",(0,r.jsx)(n.h2,{id:"aws-documentation",children:"AWS Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/lambda/latest/dg/services-cloudformation.html",children:"Using AWS Lambda with AWS CloudFormation"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"import middy from '@middy/core'\nimport cloudformationRouterHandler from '@middy/cloudformation-router'\nimport cloudformationResponseMiddleware from '@middy/cloudformation-response'\nimport validatorMiddleware from '@middy/validator'\n\nconst createHandler = middy()\n  .use(validatorMiddleware({eventSchema: {...} }))\n  .handler((event, context) => {\n    return {\n      PhysicalResourceId: '...',\n      Data:{}\n    }\n  })\n\nconst updateHandler = middy()\n  .use(validatorMiddleware({eventSchema: {...} }))\n  .handler((event, context) => {\n    return {\n      PhysicalResourceId: '...',\n      Data: {}\n    }\n  })\n\nconst deleteHandler = middy()\n  .use(validatorMiddleware({eventSchema: {...} }))\n  .handler((event, context) => {\n    return {\n      PhysicalResourceId: '...'\n    }\n  })\n\nconst routes = [\n  {\n    requesType: 'Create',\n    handler: createHandler\n  },\n  {\n    requesType: 'Update',\n    handler: updateHandler\n  },\n  {\n    routeKey: 'Delete',\n    handler: deleteHandler\n  }\n]\n\nexport const handler = middy()\n  .use(cloudformationResponseMiddleware())\n  .handler(cloudformationRouterHandler(routes))\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var o=t(6540);const r={},a=o.createContext(r);function d(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);